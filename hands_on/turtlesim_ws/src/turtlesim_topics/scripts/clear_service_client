#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from std_srvs.srv import Empty

class ClearClient(Node):
    def __init__(self):
        super().__init__('clear_screen_client')
        self.cli = self.create_client(Empty, '/clear')

        while not self.cli.wait_for_service(timeout_sec=1.0):
            self.get_logger().info('Waiting for /clear service...')

        self.req = Empty.Request()
        self.future = self.cli.call_async(self.req)
        self.future.add_done_callback(self.callback)

    def callback(self, future):
        self.get_logger().info('Screen cleared using /clear service')

def main(args=None):
    rclpy.init(args=args)
    node = ClearClient()
    rclpy.spin_once(node, timeout_sec=2)  # short spin to allow service to complete
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()

