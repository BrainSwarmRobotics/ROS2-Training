#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from turtlesim.srv import Spawn

class SpawnTurtleClient(Node):

    def __init__(self):
        super().__init__('spawn_turtle_client')
        self.cli = self.create_client(Spawn, 'spawn')
        while not self.cli.wait_for_service(timeout_sec=1.0):
            self.get_logger().info('Waiting for /spawn service...')
        self.req = Spawn.Request()

    def send_request(self):
        self.req.x = 2.0
        self.req.y = 3.0
        self.req.theta = 1.57
        self.req.name = 'turtle2'
        future = self.cli.call_async(self.req)
        rclpy.spin_until_future_complete(self, future)
        if future.result() is not None:
            self.get_logger().info(f"Turtle spawned: {future.result().name}")
        else:
            self.get_logger().error("Failed to call spawn service")

def main(args=None):
    rclpy.init(args=args)
    client = SpawnTurtleClient()
    client.send_request()
    client.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()

